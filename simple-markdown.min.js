!function(t,e){"object"==typeof exports&&"undefined"!=typeof module?module.exports=e():"function"==typeof define&&define.amd?define(e):(t=t||self).SimpleMarkdown=e()}(this,function(){"use strict";function r(t){return t.replace(v,"\n").replace(w,"").replace(g,"    ")}function l(t,e){var n=t||{};if(null!=e)for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&(n[r]=e[r]);return n}function t(y,n){var m,v=Object.keys(y).filter(function(t){var e=y[t];if(null==e||null==e.match)return!1;var n=e.order;return"number"==typeof n&&isFinite(n)||"undefined"==typeof console||console.warn("simple-markdown: Invalid order for rule `"+t+"`: "+String(n)),!0});v.sort(function(t,e){var n=y[t],r=y[e],u=n.order,o=r.order;if(u!==o)return u-o;var a=n.quality?0:1,i=r.quality?0:1;return a!=i?a-i:t<e?-1:e<t?1:0});var g=function(t,e){var n=[];for(m=e=e||m;t;){var r=null,u=null,o=null,a=NaN,i=0,l=v[0],c=y[l];do{var f=c.order,p=null==e.prevCapture?"":e.prevCapture[0],s=c.match(t,e,p);if(s){var d=c.quality?c.quality(s,e,p):0;d<=a||(r=l,u=c,o=s,a=d)}l=v[++i],c=y[l]}while(c&&(!o||c.order===f&&c.quality));if(null==u||null==o)throw new Error("Could not find a matching rule for the below content. The rule with highest `order` should always match content provided to it. Check the definition of `match` for '"+v[v.length-1]+"'. It seems to not match the following source:\n"+t);if(o.index)throw new Error("`match` must return a capture starting at index 0 (the current parse index). Did you forget a ^ at the start of the RegExp?");var h=u.parse(o,g,e);Array.isArray(h)?Array.prototype.push.apply(n,h):(null==h.type&&(h.type=r),n.push(h)),e.prevCapture=o,t=t.substring(e.prevCapture[0].length)}return n};return function(t,e){return(m=l(e,n)).inline||m.disableAutoBlockNewlines||(t+="\n\n"),m.prevCapture=null,g(r(t),m)}}function e(n){function t(t,e){return e.inline?n.exec(t):null}return t.regex=n,t}function n(n){function t(t,e){return e.inline?null:n.exec(t)}return t.regex=n,t}function u(n){function t(t,e){return n.exec(t)}return t.regex=n,t}function o(t,e,n){return{$$typeof:x,type:t,key:null==e?void 0:e,ref:null,props:n,_owner:null}}function a(t,e,n,r){n=n||{},r=void 0===r||r;var u="";for(var o in n){var a=n[o];Object.prototype.hasOwnProperty.call(n,o)&&a&&(u+=" "+m(o)+'="'+m(a)+'"')}var i="<"+t+u+">";return r?i+e+"</"+t+">":i}function i(t){if(null==t)return null;try{var e=new URL(t,"https://localhost").protocol;if(0===e.indexOf("javascript:")||0===e.indexOf("vbscript:")||0===e.indexOf("data:"))return null}catch(t){return null}return t}function c(t){return t.replace(O,"$1")}function f(t,e,n){var r=n.inline||!1;n.inline=!0;var u=t(e,n);return n.inline=r,u}function p(t,e,n){return{content:f(e,t[1],n)}}function s(n,r,u){if(!r)throw new Error("simple-markdown: outputFor: `property` must be defined. if you just upgraded, you probably need to replace `outputFor` with `reactFor`");var o,t=(n.Array||P.Array)[r];if(!t)throw new Error("simple-markdown: outputFor: to join nodes of type `"+r+"` you must provide an `Array:` joiner rule with that type, Please see the docs for details on specifying an Array rule.");var a=t,i=function(t,e){return o=e=e||o,Array.isArray(t)?a(t,i,e):n[t.type][r](t,i,e)};return function(t,e){return o=l(e,u),i(t,o)}}function d(t,e){return(e=e||{}).inline=!1,_(t,e)}function h(t,e){var n=S.test(t);return(e=e||{}).inline=!n,_(t,e)}function y(t,e){return j(d(t,e),e)}function m(t){return String(t).replace(b,function(t){return A[t]})}var v=/\r\n?/g,g=/\t/g,w=/\f/g,x="function"==typeof Symbol&&Symbol.for&&Symbol.for("react.element")||60103,k={},b=/[<>&"']/g,A={"<":"&lt;",">":"&gt;","&":"&amp;",'"':"&quot;","'":"&#x27;","/":"&#x2F;","`":"&#96;"},O=/\\([^0-9A-Za-z\s])/g,S=/\n{2,}$/,R=0,P={Array:{react:function(t,e,n){for(var r=n.key,u=[],o=0;o<t.length;o++){n.key=""+o;var a=t[o];if("text"===a.type)for(a={type:"text",content:a.content};o+1<t.length&&"text"===t[o+1].type;o++)a.content+=t[o+1].content;u.push(e(a,n))}return n.key=r,u},html:function(t,e,n){for(var r="",u=0;u<t.length;u++){var o=t[u];if("text"===o.type)for(o={type:"text",content:o.content};u+1<t.length&&"text"===t[u+1].type;u++)o.content+=t[u+1].content;r+=e(o,n)}return r}},paragraph:{order:R++,match:n(/^((?:[^\n]|\n(?! *\n))+)(?:\n *)+\n/),parse:p,react:function(t,e,n){return o("div",n.key,{className:"paragraph",children:e(t.content,n)})},html:function(t,e,n){return a("div",e(t.content,n),{class:"paragraph"})}},escape:{order:R++,match:e(/^\\([^0-9A-Za-z\s])/),parse:function(t,e,n){return{type:"text",content:t[1]}},react:null,html:null},url:{order:R++,match:e(/^(https?:\/\/[^\s<]+[^<.,:;"')\]\s])/),parse:function(t,e,n){return{type:"link",content:[{type:"text",content:t[1]}],target:t[1],title:void 0}},react:null,html:null},link:{order:R++,match:e(new RegExp("^\\[((?:\\[[^\\]]*\\]|[^\\[\\]]|\\](?=[^\\[]*\\]))*)\\]\\(\\s*<?((?:\\([^)]*\\)|[^\\s\\\\]|\\\\.)*?)>?(?:\\s+['\"]([\\s\\S]*?)['\"])?\\s*\\)")),parse:function(t,e,n){return{content:e(t[1],n),target:c(t[2]),title:t[3]}},react:function(t,e,n){return o("a",n.key,{href:i(t.target),title:t.title,children:e(t.content,n)})},html:function(t,e,n){var r={href:i(t.target),title:t.title};return a("a",e(t.content,n),r)}},em:{order:R,match:e(new RegExp("^\\b_((?:__|\\\\[\\s\\S]|[^\\\\_])+?)_\\b|^\\*(?=\\S)((?:\\*\\*|\\\\[\\s\\S]|\\s+(?:\\\\[\\s\\S]|[^\\s\\*\\\\]|\\*\\*)|[^\\s\\*\\\\])+?)\\*(?!\\*)")),quality:function(t){return t[0].length+.2},parse:function(t,e,n){return{content:e(t[2]||t[1],n)}},react:function(t,e,n){return o("em",n.key,{children:e(t.content,n)})},html:function(t,e,n){return a("em",e(t.content,n))}},strong:{order:R,match:e(/^\*\*((?:\\[\s\S]|[^\\])+?)\*\*(?!\*)/),quality:function(t){return t[0].length+.1},parse:p,react:function(t,e,n){return o("strong",n.key,{children:e(t.content,n)})},html:function(t,e,n){return a("strong",e(t.content,n))}},u:{order:R++,match:e(/^__((?:\\[\s\S]|[^\\])+?)__(?!_)/),quality:function(t){return t[0].length},parse:p,react:function(t,e,n){return o("u",n.key,{children:e(t.content,n)})},html:function(t,e,n){return a("u",e(t.content,n))}},br:{order:R++,match:u(/^ {2,}\n/),parse:function(){return{}},react:function(t,e,n){return o("br",n.key,k)},html:function(t,e,n){return"<br>"}},text:{order:R++,match:u(/^[\s\S]+?(?=[^0-9A-Za-z\s\u00c0-\uffff]|\n\n| {2,}\n|\w+:\S|$)/),parse:function(t,e,n){return{content:t[0]}},react:function(t,e,n){return t.content},html:function(t,e,n){return m(t.content)}}},_=t(P),j=s(P,"react"),F=s(P,"html");return{defaultRules:P,parserFor:t,outputFor:s,inlineRegex:e,blockRegex:n,anyScopeRegex:u,parseInline:f,parseBlock:function(t,e,n){var r=n.inline||!1;n.inline=!1;var u=t(e+"\n\n",n);return n.inline=r,u},markdownToReact:y,markdownToHtml:function(t,e){return F(d(t,e),e)},ReactMarkdown:function(t){var e={};for(var n in t)"source"!==n&&Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n]);return e.children=y(t.source),o("div",null,e)},defaultBlockParse:d,defaultInlineParse:function(t,e){return(e=e||{}).inline=!0,_(t,e)},defaultImplicitParse:h,defaultReactOutput:j,defaultHtmlOutput:F,preprocess:r,sanitizeText:m,sanitizeUrl:i,unescapeUrl:c,htmlTag:a,reactElement:o,defaultRawParse:_,ruleOutput:function(r,u){return u||"undefined"==typeof console||console.warn("simple-markdown ruleOutput should take 'react' or 'html' as the second argument."),function(t,e,n){return r[t.type][u](t,e,n)}},reactFor:function(i){var l=function(t,e){if(e=e||{},Array.isArray(t)){for(var n=e.key,r=[],u=null,o=0;o<t.length;o++){e.key=""+o;var a=l(t[o],e);"string"==typeof a&&"string"==typeof u?(u+=a,r[r.length-1]=u):(r.push(a),u=a)}return e.key=n,r}return i(t,l,e)};return l},htmlFor:function(n){var r=function(t,e){return e=e||{},Array.isArray(t)?t.map(function(t){return r(t,e)}).join(""):n(t,r,e)};return r},defaultParse:function(){return"undefined"!=typeof console&&console.warn("defaultParse is deprecated, please use `defaultImplicitParse`"),h.apply(null,arguments)},defaultOutput:function(){return"undefined"!=typeof console&&console.warn("defaultOutput is deprecated, please use `defaultReactOutput`"),j.apply(null,arguments)}}});